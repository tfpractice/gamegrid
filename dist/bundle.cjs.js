"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var graphCurry=require("graph-curry"),atan=Math.atan,abs=Math.abs,PI=Math.PI,column=function o(n){var o=n.column;return o},row=function o(n){var o=n.row;return o},nodeString=function(o){var n=o.column,r=o.row;return"{ node::"+n+"_"+r+" }"},node=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return{column:o,row:n,toString:function(){return nodeString({column:o,row:n})}}},colDiff=function(o){var n=o.column;return function(o){var r=o.column;return n-r}},rowDiff=function(o){var n=o.row;return function(o){var r=o.row;return n-r}},tangent=function(o){return function(n){return rowDiff(o)(n)/colDiff(o)(n)}},angleBetween=function(o){return function(n){return(atan(tangent(o)(n))%PI+PI)%PI}},sameCol=function(o){return function(n){return 0===abs(colDiff(o)(n))}},sameRow=function(o){return function(n){return 0===abs(rowDiff(o)(n))}},samePVector=function(o){return function(n){return angleBetween(o)(n)===.25*PI}},sameNVector=function(o){return function(n){return angleBetween(o)(n)===.75*PI}},cAdj=function(o){return function(n){return abs(colDiff(o)(n))<2}},rAdj=function(o){return function(n){return abs(rowDiff(o)(n))<2}},isEquivalent=function(o){return function(n){return sameCol(o)(n)&&sameRow(o)(n)}},xEquivalent=function(o){return function(n){return!isEquivalent(o)(n)}},isNeighbor=function(o){return function(n){return xEquivalent(o)(n)&&cAdj(o)(n)&&rAdj(o)(n)}},node$2=Object.freeze({column:column,row:row,nodeString:nodeString,node:node,colDiff:colDiff,rowDiff:rowDiff,tangent:tangent,angleBetween:angleBetween,sameCol:sameCol,sameRow:sameRow,samePVector:samePVector,sameNVector:sameNVector,cAdj:cAdj,rAdj:rAdj,isEquivalent:isEquivalent,xEquivalent:xEquivalent,isNeighbor:isNeighbor,default:node}),toConsumableArray=function(o){if(Array.isArray(o)){for(var n=0,r=Array(o.length);n<o.length;n++)r[n]=o[n];return r}return Array.from(o)},adjNodes=function(o){return function(n){return graphCurry.nodes(o).filter(isNeighbor(n))}},rowAdj=function(o){return function(n){return adjNodes(o)(n).filter(sameRow(n))}},colAdj=function(o){return function(n){return adjNodes(o)(n).filter(sameCol(n))}},posAdj=function(o){return function(n){return adjNodes(o)(n).filter(samePVector(n))}},negAdj=function(o){return function(n){return adjNodes(o)(n).filter(sameNVector(n))}},allAdj=function(o){return function(n){return adjNodes(o)(n).filter(isNeighbor(n))}},joinAdjBin=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,n=arguments[1];return graphCurry.addEdges(o)(n,0).apply(void 0,toConsumableArray(adjNodes(o)(n)))},joinColsBin=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,n=arguments[1];return graphCurry.addEdges(o)(n,0).apply(void 0,toConsumableArray(colAdj(o)(n)))},joinRowsBin=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,n=arguments[1];return graphCurry.addEdges(o)(n,0).apply(void 0,toConsumableArray(rowAdj(o)(n)))},joinPVectorsBin=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,n=arguments[1];return graphCurry.addEdges(o)(n,0).apply(void 0,toConsumableArray(posAdj(o)(n)))},joinNVectorsBin=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,n=arguments[1];return graphCurry.addEdges(o)(n,0).apply(void 0,toConsumableArray(negAdj(o)(n)))},joinAdj=function(o){return graphCurry.nodes(o).reduce(joinAdjBin,o)},joinCols=function(o){return graphCurry.nodes(o).reduce(joinColsBin,o)},joinRows=function(o){return graphCurry.nodes(o).reduce(joinRowsBin,o)},joinPVectors=function(o){return graphCurry.nodes(o).reduce(joinPVectorsBin,o)},joinNVectors=function(o){return graphCurry.nodes(o).reduce(joinNVectorsBin,o)},omniGraph=function(o){return joinAdj(graphCurry.fromElements.apply(void 0,toConsumableArray(graphCurry.nodes(o))))},colGraph=function(o){return joinCols(graphCurry.fromElements.apply(void 0,toConsumableArray(graphCurry.nodes(o))))},rowGraph=function(o){return joinRows(graphCurry.fromElements.apply(void 0,toConsumableArray(graphCurry.nodes(o))))},posGraph=function(o){return joinPVectors(graphCurry.fromElements.apply(void 0,toConsumableArray(graphCurry.nodes(o))))},negGraph=function(o){return joinNVectors(graphCurry.fromElements.apply(void 0,toConsumableArray(graphCurry.nodes(o))))},colComponents=function(o){return graphCurry.componentSet(colGraph(o))},rowComponents=function(o){return graphCurry.componentSet(rowGraph(o))},posComponents=function(o){return graphCurry.componentSet(posGraph(o))},negComponents=function(o){return graphCurry.componentSet(negGraph(o))},genNodes=function(){for(var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=[],e=o-1;e>=0;e--)for(var t=n-1;t>=0;t--)r.unshift(node(e,t));return r},cIDs=function(o){return new Set(graphCurry.nodes(o).map(column))},rIDs=function(o){return new Set(graphCurry.nodes(o).map(row))},initNodes=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return graphCurry.fromElements.apply(void 0,toConsumableArray(genNodes(o,n)))},fromGrid=function(o){return graphCurry.fromElements.apply(void 0,toConsumableArray(graphCurry.nodes(o)))},nodesByColumn=function(o){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return graphCurry.nodes(o).filter(sameCol({column:n}))}},nodesByRow=function(o){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return graphCurry.nodes(o).filter(sameRow({row:n}))}},nodesByPVector=function(o){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return graphCurry.nodes(o).filter(samePVector({column:n,row:r}))}},nodesByNVector=function(o){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return graphCurry.nodes(o).filter(sameNVector({column:n,row:r}))}},nodeByPosition=function(o){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return graphCurry.nodes(o).find(isEquivalent({column:n,row:r}))}},src$1=Object.freeze({Node:node$2,grid:initNodes,node:node,adjNodes:adjNodes,rowAdj:rowAdj,colAdj:colAdj,posAdj:posAdj,negAdj:negAdj,allAdj:allAdj,joinAdjBin:joinAdjBin,joinColsBin:joinColsBin,joinRowsBin:joinRowsBin,joinPVectorsBin:joinPVectorsBin,joinNVectorsBin:joinNVectorsBin,joinAdj:joinAdj,joinCols:joinCols,joinRows:joinRows,joinPVectors:joinPVectors,joinNVectors:joinNVectors,omniGraph:omniGraph,colGraph:colGraph,rowGraph:rowGraph,posGraph:posGraph,negGraph:negGraph,colComponents:colComponents,rowComponents:rowComponents,posComponents:posComponents,negComponents:negComponents,genNodes:genNodes,cIDs:cIDs,rIDs:rIDs,initNodes:initNodes,fromGrid:fromGrid,nodesByColumn:nodesByColumn,nodesByRow:nodesByRow,nodesByPVector:nodesByPVector,nodesByNVector:nodesByNVector,nodeByPosition:nodeByPosition});exports.default=src$1,exports.Node=node$2,exports.grid=initNodes,exports.node=node,exports.adjNodes=adjNodes,exports.rowAdj=rowAdj,exports.colAdj=colAdj,exports.posAdj=posAdj,exports.negAdj=negAdj,exports.allAdj=allAdj,exports.joinAdjBin=joinAdjBin,exports.joinColsBin=joinColsBin,exports.joinRowsBin=joinRowsBin,exports.joinPVectorsBin=joinPVectorsBin,exports.joinNVectorsBin=joinNVectorsBin,exports.joinAdj=joinAdj,exports.joinCols=joinCols,exports.joinRows=joinRows,exports.joinPVectors=joinPVectors,exports.joinNVectors=joinNVectors,exports.omniGraph=omniGraph,exports.colGraph=colGraph,exports.rowGraph=rowGraph,exports.posGraph=posGraph,exports.negGraph=negGraph,exports.colComponents=colComponents,exports.rowComponents=rowComponents,exports.posComponents=posComponents,exports.negComponents=negComponents,exports.genNodes=genNodes,exports.cIDs=cIDs,exports.rIDs=rIDs,exports.initNodes=initNodes,exports.fromGrid=fromGrid,exports.nodesByColumn=nodesByColumn,exports.nodesByRow=nodesByRow,exports.nodesByPVector=nodesByPVector,exports.nodesByNVector=nodesByNVector,exports.nodeByPosition=nodeByPosition;
//# sourceMappingURL=bundle.cjs.js.map
