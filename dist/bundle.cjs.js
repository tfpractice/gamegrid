"use strict";function _toConsumableArray(n){if(Array.isArray(n)){for(var r=0,o=Array(n.length);r<n.length;r++)o[r]=n[r];return o}return Array.from(n)}function _toConsumableArray$1(n){if(Array.isArray(n)){for(var r=0,o=Array(n.length);r<n.length;r++)o[r]=n[r];return o}return Array.from(n)}Object.defineProperty(exports,"__esModule",{value:!0});var graphCurry=require("graph-curry"),atan=Math.atan,abs=Math.abs,PI=Math.PI,column=function n(r){var n=r.column;return n},row=function n(r){var n=r.row;return n},nodeString=function(n){var r=n.column,o=n.row;return"{ node::"+r+"_"+o+" }"},spawn=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return{column:n,row:r,toString:function(){return nodeString({column:n,row:r})}}},colDiff=function(n){var r=n.column;return function(n){var o=n.column;return r-o}},rowDiff=function(n){var r=n.row;return function(n){var o=n.row;return r-o}},tangent=function(n){return function(r){return rowDiff(n)(r)/colDiff(n)(r)}},angleBetween=function(n){return function(r){return(atan(tangent(n)(r))%PI+PI)%PI}},sameCol=function(n){return function(r){return 0===abs(colDiff(n)(r))}},sameRow=function(n){return function(r){return 0===abs(rowDiff(n)(r))}},samePVector=function(n){return function(r){return angleBetween(n)(r)===.25*PI}},sameNVector=function(n){return function(r){return angleBetween(n)(r)===.75*PI}},cAdj=function(n){return function(r){return abs(colDiff(n)(r))<2}},rAdj=function(n){return function(r){return abs(rowDiff(n)(r))<2}},isEquivalent=function(n){return function(r){return sameCol(n)(r)&&sameRow(n)(r)}},xEquivalent=function(n){return function(r){return!isEquivalent(n)(r)}},isNeighbor=function(n){return function(r){return xEquivalent(n)(r)&&cAdj(n)(r)&&rAdj(n)(r)}},node$1=Object.freeze({column:column,row:row,nodeString:nodeString,spawn:spawn,colDiff:colDiff,rowDiff:rowDiff,tangent:tangent,angleBetween:angleBetween,sameCol:sameCol,sameRow:sameRow,samePVector:samePVector,sameNVector:sameNVector,cAdj:cAdj,rAdj:rAdj,isEquivalent:isEquivalent,xEquivalent:xEquivalent,isNeighbor:isNeighbor,default:spawn}),adjNodes=function(n){return function(r){return graphCurry.nodes(n).filter(isNeighbor(r))}},rowAdj=function(n){return function(r){return adjNodes(n)(r).filter(sameRow(r))}},colAdj=function(n){return function(r){return adjNodes(n)(r).filter(sameCol(r))}},posAdj=function(n){return function(r){return adjNodes(n)(r).filter(samePVector(r))}},negAdj=function(n){return function(r){return adjNodes(n)(r).filter(sameNVector(r))}},allAdj=function(n){return function(r){return adjNodes(n)(r).filter(isNeighbor(r))}},joinAdjBin=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,r=arguments[1];return graphCurry.addEdges(n)(r,0).apply(void 0,_toConsumableArray(adjNodes(n)(r)))},joinColsBin=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,r=arguments[1];return graphCurry.addEdges(n)(r,0).apply(void 0,_toConsumableArray(colAdj(n)(r)))},joinRowsBin=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,r=arguments[1];return graphCurry.addEdges(n)(r,0).apply(void 0,_toConsumableArray(rowAdj(n)(r)))},joinPVectorsBin=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,r=arguments[1];return graphCurry.addEdges(n)(r,0).apply(void 0,_toConsumableArray(posAdj(n)(r)))},joinNVectorsBin=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,r=arguments[1];return graphCurry.addEdges(n)(r,0).apply(void 0,_toConsumableArray(negAdj(n)(r)))},joinAdj=function(n){return graphCurry.nodes(n).reduce(joinAdjBin,n)},joinCols=function(n){return graphCurry.nodes(n).reduce(joinColsBin,n)},joinRows=function(n){return graphCurry.nodes(n).reduce(joinRowsBin,n)},joinPVectors=function(n){return graphCurry.nodes(n).reduce(joinPVectorsBin,n)},joinNVectors=function(n){return graphCurry.nodes(n).reduce(joinNVectorsBin,n)},connections=Object.freeze({adjNodes:adjNodes,rowAdj:rowAdj,colAdj:colAdj,posAdj:posAdj,negAdj:negAdj,allAdj:allAdj,joinAdjBin:joinAdjBin,joinColsBin:joinColsBin,joinRowsBin:joinRowsBin,joinPVectorsBin:joinPVectorsBin,joinNVectorsBin:joinNVectorsBin,joinAdj:joinAdj,joinCols:joinCols,joinRows:joinRows,joinPVectors:joinPVectors,joinNVectors:joinNVectors}),nodeArray=function(){for(var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=[],e=n-1;e>=0;e--)for(var t=r-1;t>=0;t--)o.unshift(spawn(e,t));return o},cIDs=function(n){return new Set(graphCurry.nodes(n).map(column))},rIDs=function(n){return new Set(graphCurry.nodes(n).map(row))},initNodes=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return graphCurry.fromElements.apply(void 0,_toConsumableArray$1(nodeArray(n,r)))},fromGrid=function(n){return graphCurry.fromElements.apply(void 0,_toConsumableArray$1(graphCurry.nodes(n)))},nodesByColumn=function(n){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return graphCurry.nodes(n).filter(sameCol({column:r}))}},nodesByRow=function(n){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return graphCurry.nodes(n).filter(sameRow({row:r}))}},nodesByPVector=function(n){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return graphCurry.nodes(n).filter(samePVector({column:r,row:o}))}},nodesByNVector=function(n){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return graphCurry.nodes(n).filter(sameNVector({column:r,row:o}))}},nodeByPosition=function(n){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return graphCurry.nodes(n).find(isEquivalent({column:r,row:o}))}},grid=Object.freeze({nodeArray:nodeArray,cIDs:cIDs,rIDs:rIDs,initNodes:initNodes,fromGrid:fromGrid,nodesByColumn:nodesByColumn,nodesByRow:nodesByRow,nodesByPVector:nodesByPVector,nodesByNVector:nodesByNVector,nodeByPosition:nodeByPosition,default:initNodes,nodes:graphCurry.nodes,neighbors:graphCurry.neighbors}),index$2=Object.freeze({Node:node$1,Grid:grid,Connections:connections}),require$$0=index$2&&index$2.default||index$2,index=require$$0;exports.default=index;
//# sourceMappingURL=bundle.cjs.js.map
