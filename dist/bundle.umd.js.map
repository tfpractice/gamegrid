{"version":3,"file":"bundle.umd.js","sources":["../src/cell.js","../src/grid.js","../index.js"],"sourcesContent":["const { atan, abs, PI } = Math;\n\nexport const spawn = (column = null, row = null) =>\n ({ column, row, toString: () => cellString({ column, row }) });\nexport default spawn;\nexport const column = ({ column }) => column;\nexport const row = ({ row }) => row;\nexport const cellString = ({ column, row }) => `{ cell::${column}_${row} }`;\n\nexport const colDiff = ({ column: c0 }) => ({ column: c1 }) => (c0 - c1);\nexport const rowDiff = ({ row: r0 }) => ({ row: r1 }) => (r0 - r1);\nexport const tangent = n0 => n1 => (rowDiff(n0)(n1)) / (colDiff(n0)(n1));\nexport const angleBetween = n0 => n1 => ((atan(tangent(n0)(n1)) % PI) + PI) % PI;\n\nexport const sameCol = n0 => n1 => abs(colDiff(n0)(n1)) === 0;\nexport const sameRow = n0 => n1 => abs(rowDiff(n0)(n1)) === 0;\nexport const samePVector = n0 => n1 => angleBetween(n0)(n1) === PI * 0.25;\nexport const sameNVector = n0 => n1 => angleBetween(n0)(n1) === PI * 0.75;\n\nexport const cAdj = n0 => n1 => abs(colDiff(n0)(n1)) < 2;\nexport const rAdj = n0 => n1 => abs(rowDiff(n0)(n1)) < 2;\n\nexport const isEquivalent = c0 => c1 => sameCol(c0)(c1) && sameRow(c0)(c1);\nexport const xEquivalent = src => alt => !isEquivalent(src)(alt);\n\nexport const isNeighbor = n0 => n1 =>\n xEquivalent(n0)(n1) && cAdj(n0)(n1) && rAdj(n0)(n1);\n","import { fromElements, nodes, removeNodes, } from 'graph-curry';\nimport cell, { column as getCol, row as getRow, isEquivalent, isNeighbor, sameCol,\nsameNVector, samePlayer, samePVector, sameRow, }\nfrom './cell';\n\n// export default fromElements;\nexport { nodes, } from 'graph-curry';\nexport const cellArray = (cols = 0, rows = 0) => {\n  const cells = [];\n\n  for (let c = cols - 1; c >= 0; c--) {\n    for (let r = rows - 1; r >= 0; r--) {\n      cells.unshift(cell(c, r));\n    }\n  }\n\n  return cells;\n};\n\nexport const cIDs = grid => new Set(nodes(grid).map(getCol));\nexport const rIDs = grid => new Set(nodes(grid).map(getRow));\n\nexport const initCells = (c = 0, r = 0) => fromElements(...cellArray(c, r));\nexport const fromGrid = grid => fromElements(...nodes(grid));\n\nexport const nodesByColumn = grid => (column = 0) =>\n  nodes(grid).filter(sameCol({ column }));\n\nexport const nodesByRow = grid => (row = 0) =>\n  nodes(grid).filter(sameRow({ row }));\n\nexport const nodesByPVector = grid => (column = 0, row = 0) =>\n  nodes(grid).filter(samePVector({ column, row }));\n\nexport const nodesByNVector = grid => (column = 0, row = 0) =>\n  nodes(grid).filter(sameNVector({ column, row }));\n\nexport const nodeByPosition = grid => (column = 0, row = 0) =>\n  nodes(grid).find(isEquivalent({ column, row }));\n\nexport default initCells;\n","module.exports = require('./src');\n"],"names":["atan","Math","abs","PI","spawn","column","row","toString","cellString","colDiff","c0","c1","rowDiff","r0","r1","tangent","n0","n1","angleBetween","sameCol","sameRow","samePVector","sameNVector","cAdj","rAdj","isEquivalent","xEquivalent","src","alt","isNeighbor","cellArray","cols","rows","cells","c","r","unshift","cell","cIDs","Set","nodes","grid","map","getCol","rIDs","getRow","initCells","fromElements","fromGrid","nodesByColumn","filter","nodesByRow","nodesByPVector","nodesByNVector","nodeByPosition","find","require$$0"],"mappings":"0YAAQA,GAAkBC,KAAlBD,KAAME,EAAYD,KAAZC,IAAKC,EAAOF,KAAPE,GAENC,EAAQ,cAACC,0DAAS,KAAMC,yDAAM,YACvCD,SAAQC,MAAKC,SAAU,iBAAMC,IAAaH,SAAQC,WAEzCD,EAAS,iBAAGA,KAAAA,aAAaA,IACzBC,EAAM,iBAAGA,KAAAA,UAAUA,IACnBE,EAAa,eAAGH,KAAAA,OAAQC,IAAAA,qBAAqBD,MAAUC,QAEvDG,EAAU,eAAWC,KAARL,aAAiB,gBAAWM,KAARN,aAAkBK,GAAKC,IACxDC,EAAU,eAAQC,KAALP,UAAc,gBAAQQ,KAALR,UAAeO,GAAKC,IAClDC,EAAU,kBAAM,mBAAOH,GAAQI,GAAIC,GAAQR,EAAQO,GAAIC,KACvDC,EAAe,kBAAM,oBAAQlB,EAAKe,EAAQC,GAAIC,IAAOd,EAAMA,GAAMA,IAEjEgB,EAAU,kBAAM,mBAA+B,KAAzBjB,EAAIO,EAAQO,GAAIC,MACtCG,EAAU,kBAAM,mBAA+B,KAAzBlB,EAAIU,EAAQI,GAAIC,MACtCI,EAAc,kBAAM,mBAAMH,GAAaF,GAAIC,KAAa,IAALd,IACnDmB,EAAc,kBAAM,mBAAMJ,GAAaF,GAAIC,KAAa,IAALd,IAEnDoB,EAAO,kBAAM,mBAAMrB,GAAIO,EAAQO,GAAIC,IAAO,IAC1CO,EAAO,kBAAM,mBAAMtB,GAAIU,EAAQI,GAAIC,IAAO,IAE1CQ,EAAe,kBAAM,mBAAMN,GAAQT,GAAIC,IAAOS,EAAQV,GAAIC,KAC1De,EAAc,kBAAO,oBAAQD,EAAaE,GAAKC,KAE/CC,EAAa,kBAAM,mBAC/BH,GAAYV,GAAIC,IAAOM,EAAKP,GAAIC,IAAOO,EAAKR,GAAIC,2NCnBpCa,EAAY,eAGlB,GAHmBC,0DAAO,EAAGC,yDAAO,EACnCC,KAEGC,EAAIH,EAAO,EAAGG,GAAK,EAAGA,QACxB,GAAIC,GAAIH,EAAO,EAAGG,GAAK,EAAGA,MACvBC,QAAQC,EAAKH,EAAGC,UAInBF,IAGIK,EAAO,kBAAQ,IAAIC,KAAIC,QAAMC,GAAMC,IAAIC,KACvCC,EAAO,kBAAQ,IAAIL,KAAIC,QAAMC,GAAMC,IAAIG,KAEvCC,EAAY,cAACZ,0DAAI,EAAGC,yDAAI,QAAMY,+BAAgBjB,EAAUI,EAAGC,MAC3Da,EAAW,kBAAQD,+BAAgBP,QAAMC,MAEzCQ,EAAgB,kBAAQ,eAAC5C,0DAAS,QAC7CmC,SAAMC,GAAMS,OAAO/B,GAAUd,cAElB8C,EAAa,kBAAQ,eAAC7C,0DAAM,QACvCkC,SAAMC,GAAMS,OAAO9B,GAAUd,WAElB8C,EAAiB,kBAAQ,eAAC/C,0DAAS,EAAGC,yDAAM,QACvDkC,SAAMC,GAAMS,OAAO7B,GAAchB,SAAQC,WAE9B+C,EAAiB,kBAAQ,eAAChD,0DAAS,EAAGC,yDAAM,QACvDkC,SAAMC,GAAMS,OAAO5B,GAAcjB,SAAQC,WAE9BgD,EAAiB,kBAAQ,eAACjD,0DAAS,EAAGC,yDAAM,QACvDkC,SAAMC,GAAMc,KAAK9B,GAAepB,SAAQC,4OCtCzBkD"}