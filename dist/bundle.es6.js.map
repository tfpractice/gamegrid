{"version":3,"file":"bundle.es6.js","sources":["../src/node.js","../src/adj.js","../src/join.js","../src/components.js","../src/grid.js"],"sourcesContent":["const { atan, abs, PI } = Math;\n\nexport const column = ({ column }) => column;\nexport const row = ({ row }) => row;\nexport const nodeString = ({ column, row }) => `{ node::${column}_${row} }`;\nexport const node = (column = null, row = null) =>\n ({ column, row, toString: () => nodeString({ column, row }) });\nexport const copy = n => node(column(n), row(n));\n\nexport const colDiff = ({ column: c0 }) => ({ column: c1 }) => (c0 - c1);\nexport const rowDiff = ({ row: r0 }) => ({ row: r1 }) => (r0 - r1);\nexport const tangent = n0 => n1 => rowDiff(n0)(n1) / colDiff(n0)(n1);\nexport const angleBetween = n0 => n1 => ((atan(tangent(n0)(n1)) % PI) + PI) % PI;\n\nexport const sameCol = n0 => n1 => abs(colDiff(n0)(n1)) === 0;\nexport const sameRow = n0 => n1 => abs(rowDiff(n0)(n1)) === 0;\nexport const samePVector = n0 => n1 => angleBetween(n0)(n1) === PI * 0.25;\nexport const sameNVector = n0 => n1 => angleBetween(n0)(n1) === PI * 0.75;\n\nexport const cAdj = n0 => n1 => abs(colDiff(n0)(n1)) < 2;\nexport const rAdj = n0 => n1 => abs(rowDiff(n0)(n1)) < 2;\n\nexport const isEquivalent = c0 => c1 => sameCol(c0)(c1) && sameRow(c0)(c1);\nexport const xEquivalent = src => alt => !isEquivalent(src)(alt);\n\nexport const isNeighbor = n0 => n1 =>\n xEquivalent(n0)(n1) && cAdj(n0)(n1) && rAdj(n0)(n1);\n","import { Graph, } from 'graph-curry';\nimport { isNeighbor, sameCol, sameNVector, samePVector, sameRow, } from './node';\nconst { nodes, } = Graph;\n\nexport const allAdj = g => src => nodes(g).filter(isNeighbor(src));\nexport const rowAdj = g => src => allAdj(g)(src).filter(sameRow(src));\nexport const colAdj = g => src => allAdj(g)(src).filter(sameCol(src));\nexport const posAdj = g => src => allAdj(g)(src).filter(samePVector(src));\nexport const negAdj = g => src => allAdj(g)(src).filter(sameNVector(src));\n","import { Graph, } from 'graph-curry';\nimport { allAdj, colAdj, negAdj, posAdj, rowAdj, } from './adj';\n\nconst { addEdges, nodes, } = Graph;\n\nexport const joinAdj = (g, src) => addEdges(g)(src, 0)(...allAdj(g)(src));\nexport const joinCols = (g, src) => addEdges(g)(src, 0)(...colAdj(g)(src));\nexport const joinRows = (g, src) => addEdges(g)(src, 0)(...rowAdj(g)(src));\nexport const joinPVectors = (g, src) => addEdges(g)(src, 0)(...posAdj(g)(src));\nexport const joinNVectors = (g, src) => addEdges(g)(src, 0)(...negAdj(g)(src));\n\nexport const joinGrid = grid => nodes(grid).reduce(joinAdj, grid);\nexport const colGrid = grid => nodes(grid).reduce(joinCols, grid);\nexport const rowGrid = grid => nodes(grid).reduce(joinRows, grid);\nexport const posGrid = grid => nodes(grid).reduce(joinPVectors, grid);\nexport const negGrid = grid => nodes(grid).reduce(joinNVectors, grid);\n","import { Components, } from 'graph-curry';\nimport { colGrid, negGrid, posGrid, rowGrid, } from './join';\nconst { componentSet, } = Components;\n\nexport const colComponents = grid => componentSet(colGrid(grid));\nexport const rowComponents = grid => componentSet(rowGrid(grid));\nexport const posComponents = grid => componentSet(posGrid(grid));\nexport const negComponents = grid => componentSet(negGrid(grid));\n","import { Graph, } from 'graph-curry';\nimport { column as getCol, row as getRow, isEquivalent, node, sameCol,\n  sameNVector, samePVector, sameRow, } from './node';\n\nconst { fromElements, nodes, } = Graph;\n\nexport const genNodes = (cols = 0, rows = 0) => {\n  const nArr = [];\n  \n  for (let c = cols - 1; c >= 0; c--) {\n    for (let r = rows - 1; r >= 0; r--) {\n      nArr.unshift(node(c, r));\n    }\n  }\n  \n  return nArr;\n};\n\nexport const cIDs = grid => new Set(nodes(grid).map(getCol));\nexport const rIDs = grid => new Set(nodes(grid).map(getRow));\n\nexport const grid = (c = 0, r = 0) => fromElements(...genNodes(c, r));\nexport const copy = grid => fromElements(...nodes(grid));\n\nexport const nodesByColumn = grid => (column = 0) =>\n  nodes(grid).filter(sameCol({ column }));\n\nexport const nodesByRow = grid => (row = 0) =>\n  nodes(grid).filter(sameRow({ row }));\n\nexport const nodesByPVector = grid => (column = 0, row = 0) =>\n  nodes(grid).filter(samePVector({ column, row }));\n\nexport const nodesByNVector = grid => (column = 0, row = 0) =>\n  nodes(grid).filter(sameNVector({ column, row }));\n\nexport const nodeByPosition = grid => (column = 0, row = 0) =>\n  nodes(grid).find(isEquivalent({ column, row }));\n"],"names":["atan","Math","abs","PI","column","row","nodeString","node","toString","copy","n","colDiff","c0","c1","rowDiff","r0","r1","tangent","n0","n1","angleBetween","sameCol","sameRow","samePVector","sameNVector","cAdj","rAdj","isEquivalent","xEquivalent","src","alt","isNeighbor","nodes","Graph","allAdj","g","filter","rowAdj","colAdj","posAdj","negAdj","addEdges","joinAdj","joinCols","joinRows","joinPVectors","joinNVectors","joinGrid","grid","reduce","colGrid","rowGrid","posGrid","negGrid","componentSet","Components","colComponents","rowComponents","posComponents","negComponents","fromElements","genNodes","cols","rows","nArr","c","r","unshift","cIDs","Set","map","getCol","rIDs","getRow","nodesByColumn","nodesByRow","nodesByPVector","nodesByNVector","nodeByPosition","find"],"mappings":"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"}