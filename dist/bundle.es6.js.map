{"version":3,"file":"bundle.es6.js","sources":["../src/node.js"],"sourcesContent":["const { atan, abs, PI } = Math;\n\nexport const column = ({ column }) => column;\nexport const row = ({ row }) => row;\nexport const nodeString = ({ column, row }) => `{ node::${column}_${row} }`;\nexport const node = (column = null, row = null) =>\n ({ column, row, toString: () => nodeString({ column, row }) });\n\nexport const colDiff = ({ column: c0 }) => ({ column: c1 }) => (c0 - c1);\nexport const rowDiff = ({ row: r0 }) => ({ row: r1 }) => (r0 - r1);\nexport const tangent = n0 => n1 => (rowDiff(n0)(n1)) / (colDiff(n0)(n1));\nexport const angleBetween = n0 => n1 => ((atan(tangent(n0)(n1)) % PI) + PI) % PI;\n\nexport const sameCol = n0 => n1 => abs(colDiff(n0)(n1)) === 0;\nexport const sameRow = n0 => n1 => abs(rowDiff(n0)(n1)) === 0;\nexport const samePVector = n0 => n1 => angleBetween(n0)(n1) === PI * 0.25;\nexport const sameNVector = n0 => n1 => angleBetween(n0)(n1) === PI * 0.75;\n\nexport const cAdj = n0 => n1 => abs(colDiff(n0)(n1)) < 2;\nexport const rAdj = n0 => n1 => abs(rowDiff(n0)(n1)) < 2;\n\nexport const isEquivalent = c0 => c1 => sameCol(c0)(c1) && sameRow(c0)(c1);\nexport const xEquivalent = src => alt => !isEquivalent(src)(alt);\n\nexport const isNeighbor = n0 => n1 =>\n xEquivalent(n0)(n1) && cAdj(n0)(n1) && rAdj(n0)(n1);\n\nexport default node;\n"],"names":["nodeString","column","row","node","toString"],"mappings":";;AAIO,IAAMA,aAAa,SAAbA,UAAa;MAAGC,MAAH,SAAGA,MAAH;MAAWC,GAAX,SAAWA,GAAX;sBAAgCD,MAAhC,SAA0CC,GAA1C;CAAnB;AACP,AAAO,IAAMC,OAAO,SAAPA,IAAO;MAACF,MAAD,uEAAU,IAAV;MAAgBC,GAAhB,uEAAsB,IAAtB;SAClB,EAAED,cAAF,EAAUC,QAAV,EAAeE,UAAU;aAAMJ,WAAW,EAAEC,cAAF,EAAUC,QAAV,EAAX,CAAN;KAAzB,EADkB;CAAb,CAGP,AAAO,AACP,AAAO,AACP,AAAO,AACP,AAAO,AAEP,AAAO,AACP,AAAO,AACP,AAAO,AACP,AAAO,AAEP,AAAO,AACP,AAAO,AAEP,AAAO,AACP,AAAO,AAEP,AAAO,AAGP;;"}