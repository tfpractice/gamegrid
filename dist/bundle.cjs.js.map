{"version":3,"file":"bundle.cjs.js","sources":["../src/node.js","../src/grid.js","../index.js"],"sourcesContent":["const { atan, abs, PI } = Math;\n\nexport const column = ({ column }) => column;\nexport const row = ({ row }) => row;\nexport const nodeString = ({ column, row }) => `{ node::${column}_${row} }`;\nexport const spawn = (column = null, row = null) =>\n ({ column, row, toString: () => nodeString({ column, row }) });\n\nexport const colDiff = ({ column: c0 }) => ({ column: c1 }) => (c0 - c1);\nexport const rowDiff = ({ row: r0 }) => ({ row: r1 }) => (r0 - r1);\nexport const tangent = n0 => n1 => (rowDiff(n0)(n1)) / (colDiff(n0)(n1));\nexport const angleBetween = n0 => n1 => ((atan(tangent(n0)(n1)) % PI) + PI) % PI;\n\nexport const sameCol = n0 => n1 => abs(colDiff(n0)(n1)) === 0;\nexport const sameRow = n0 => n1 => abs(rowDiff(n0)(n1)) === 0;\nexport const samePVector = n0 => n1 => angleBetween(n0)(n1) === PI * 0.25;\nexport const sameNVector = n0 => n1 => angleBetween(n0)(n1) === PI * 0.75;\n\nexport const cAdj = n0 => n1 => abs(colDiff(n0)(n1)) < 2;\nexport const rAdj = n0 => n1 => abs(rowDiff(n0)(n1)) < 2;\n\nexport const isEquivalent = c0 => c1 => sameCol(c0)(c1) && sameRow(c0)(c1);\nexport const xEquivalent = src => alt => !isEquivalent(src)(alt);\n\nexport const isNeighbor = n0 => n1 =>\n xEquivalent(n0)(n1) && cAdj(n0)(n1) && rAdj(n0)(n1);\nexport default spawn;\n","import { fromElements, nodes, removeNodes, } from 'graph-curry';\nimport node, { column as getCol, row as getRow, isEquivalent, isNeighbor, sameCol,\nsameNVector, samePlayer, samePVector, sameRow, }\nfrom './node';\n\n// export default fromElements;\nexport { nodes, } from 'graph-curry';\nexport const nodeArray = (cols = 0, rows = 0) => {\n  const nodes = [];\n\n  for (let c = cols - 1; c >= 0; c--) {\n    for (let r = rows - 1; r >= 0; r--) {\n      nodes.unshift(node(c, r));\n    }\n  }\n\n  return nodes;\n};\n\nexport const cIDs = grid => new Set(nodes(grid).map(getCol));\nexport const rIDs = grid => new Set(nodes(grid).map(getRow));\n\nexport const initNodes = (c = 0, r = 0) => fromElements(...nodeArray(c, r));\nexport const fromGrid = grid => fromElements(...nodes(grid));\n\nexport const nodesByColumn = grid => (column = 0) =>\n  nodes(grid).filter(sameCol({ column }));\n\nexport const nodesByRow = grid => (row = 0) =>\n  nodes(grid).filter(sameRow({ row }));\n\nexport const nodesByPVector = grid => (column = 0, row = 0) =>\n  nodes(grid).filter(samePVector({ column, row }));\n\nexport const nodesByNVector = grid => (column = 0, row = 0) =>\n  nodes(grid).filter(sameNVector({ column, row }));\n\nexport const nodeByPosition = grid => (column = 0, row = 0) =>\n  nodes(grid).find(isEquivalent({ column, row }));\n\nexport default initNodes;\n","module.exports = require('./src');\n"],"names":["atan","Math","abs","PI","column","row","nodeString","spawn","toString","colDiff","c0","c1","rowDiff","r0","r1","tangent","n0","n1","angleBetween","sameCol","sameRow","samePVector","sameNVector","cAdj","rAdj","isEquivalent","xEquivalent","src","alt","isNeighbor","nodeArray","cols","rows","nodes","c","r","unshift","node","cIDs","Set","grid","map","getCol","rIDs","getRow","initNodes","fromElements","fromGrid","nodesByColumn","filter","nodesByRow","nodesByPVector","nodesByNVector","nodeByPosition","find","require$$0"],"mappings":"mPAAQA,KAAkBC,KAAlBD,KAAME,IAAYD,KAAZC,IAAKC,GAAOF,KAAPE,GAENC,OAAS,iBAAGA,KAAAA,aAAaA,IACzBC,IAAM,iBAAGA,KAAAA,UAAUA,IACnBC,WAAa,eAAGF,KAAAA,OAAQC,IAAAA,qBAAqBD,MAAUC,QACvDE,MAAQ,cAACH,0DAAS,KAAMC,yDAAM,YACvCD,SAAQC,MAAKG,SAAU,iBAAMF,aAAaF,SAAQC,WAEzCI,QAAU,eAAWC,KAARN,aAAiB,gBAAWO,KAARP,aAAkBM,GAAKC,IACxDC,QAAU,eAAQC,KAALR,UAAc,gBAAQS,KAALT,UAAeQ,GAAKC,IAClDC,QAAU,kBAAM,mBAAOH,SAAQI,GAAIC,GAAQR,QAAQO,GAAIC,KACvDC,aAAe,kBAAM,oBAAQlB,KAAKe,QAAQC,GAAIC,IAAOd,GAAMA,IAAMA,KAEjEgB,QAAU,kBAAM,mBAA+B,KAAzBjB,IAAIO,QAAQO,GAAIC,MACtCG,QAAU,kBAAM,mBAA+B,KAAzBlB,IAAIU,QAAQI,GAAIC,MACtCI,YAAc,kBAAM,mBAAMH,cAAaF,GAAIC,KAAa,IAALd,KACnDmB,YAAc,kBAAM,mBAAMJ,cAAaF,GAAIC,KAAa,IAALd,KAEnDoB,KAAO,kBAAM,mBAAMrB,KAAIO,QAAQO,GAAIC,IAAO,IAC1CO,KAAO,kBAAM,mBAAMtB,KAAIU,QAAQI,GAAIC,IAAO,IAE1CQ,aAAe,kBAAM,mBAAMN,SAAQT,GAAIC,IAAOS,QAAQV,GAAIC,KAC1De,YAAc,kBAAO,oBAAQD,aAAaE,GAAKC,KAE/CC,WAAa,kBAAM,mBAC/BH,aAAYV,GAAIC,IAAOM,KAAKP,GAAIC,IAAOO,KAAKR,GAAIC,yVClBpCa,UAAY,eAGlB,GAHmBC,0DAAO,EAAGC,yDAAO,EACnCC,KAEGC,EAAIH,EAAO,EAAGG,GAAK,EAAGA,QACxB,GAAIC,GAAIH,EAAO,EAAGG,GAAK,EAAGA,MACvBC,QAAQC,MAAKH,EAAGC,UAInBF,IAGIK,KAAO,kBAAQ,IAAIC,KAAIN,iBAAMO,GAAMC,IAAIC,UACvCC,KAAO,kBAAQ,IAAIJ,KAAIN,iBAAMO,GAAMC,IAAIG,OAEvCC,UAAY,cAACX,0DAAI,EAAGC,yDAAI,QAAMW,yDAAgBhB,UAAUI,EAAGC,MAC3DY,SAAW,kBAAQD,yDAAgBb,iBAAMO,MAEzCQ,cAAgB,kBAAQ,eAAC5C,0DAAS,QAC7C6B,kBAAMO,GAAMS,OAAO9B,SAAUf,cAElB8C,WAAa,kBAAQ,eAAC7C,0DAAM,QACvC4B,kBAAMO,GAAMS,OAAO7B,SAAUf,WAElB8C,eAAiB,kBAAQ,eAAC/C,0DAAS,EAAGC,yDAAM,QACvD4B,kBAAMO,GAAMS,OAAO5B,aAAcjB,SAAQC,WAE9B+C,eAAiB,kBAAQ,eAAChD,0DAAS,EAAGC,yDAAM,QACvD4B,kBAAMO,GAAMS,OAAO3B,aAAclB,SAAQC,WAE9BgD,eAAiB,kBAAQ,eAACjD,0DAAS,EAAGC,yDAAM,QACvD4B,kBAAMO,GAAMc,KAAK7B,cAAerB,SAAQC,sYCtCzBkD"}